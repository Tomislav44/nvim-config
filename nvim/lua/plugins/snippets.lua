return {}
-- -- snippets.lua
--
-- local cmp_luasnip = require('lsp-zero')
-- local cmp = require('cmp')
--
-- -- Map Tab to jump to next placeholder or expand snippet
-- vim.api.nvim_set_keymap('i', '<Tab>', [[lua require'cmp_luasnip'.expand_or_jump()]], { noremap = true, silent = true })
--
-- -- Map Shift+Tab to jump to the previous placeholder
-- vim.api.nvim_set_keymap('i', '<S-Tab>', [[lua require'cmp_luasnip'.jump(-1)]], { noremap = true, silent = true })
--
-- -- Set up nvim-cmp with LuaSnip integration
-- cmp.setup({
--   snippet = {
--     expand = function(args)
--       require('cmp_luasnip').lsp_expand(args.body)  -- Expand the LSP completion item with Luasnip
--     end,
--   },
--   mapping = {
--     -- Tab to trigger snippet expansion or jump
--     ['<Tab>'] = cmp.mapping(function(fallback)
--       if cmp_luasnip.expand_or_jumpable() then
--         cmp_luasnip.expand_or_jump()  -- Jump to the next placeholder or expand the snippet
--       else
--         fallback()  -- If not jumpable, fall back to regular completion
--       end
--     end, {'i', 's'}),
--
--     -- Shift+Tab to jump backward through placeholders
--     ['<S-Tab>'] = cmp.mapping(function(fallback)
--       if cmp_luasnip.jumpable(-1) then
--         cmp_luasnip.jump(-1)  -- Jump backward through placeholders
--       else
--         fallback()  -- If not jumpable, fall back to regular completion
--       end
--     end, {'i', 's'}),
--
--     -- Regular completion item selection
--     ['<C-n>'] = cmp.mapping.select_next_item(),
--     ['<C-p>'] = cmp.mapping.select_prev_item(),
--   },
--   sources = {
--     { name = 'nvim_lsp' },
--     { name = 'cmp_luasnip' },  -- Include LuaSnip for snippet completion
--   },
-- })
--
